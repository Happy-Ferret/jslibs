//host.errorMessages = exec('../common/errors-'+host.lang.split('-')[0].toLowerCase()+'.js');
({
ERRNO_1:"(numéro d'erreur: %d)",
NUM_1:"%d",
STR_1:"%s",
NAME_1:"'%s'",
COMMENT_1:"(%s)",
COMMENT_2:"(%s %s)",
COMMENT_BEGIN:"(",
COMMENT_END:")",
INTERVAL_NUM_2:"%d à %d",
INTERVAL_STR_2:"%s à %s",
DETAILS:":",
SEP:",",
OR:"ou",
AND:"et",
DATA:"la donnée",
DATATYPE:"le type de donnée",
DATASIZE:"la taille de la donnée",
ARGC:"le nombre d'arguments",
ARG:"l'argument",
PARAM:"le paramètre",
PARAMTYPE:"le type du paramètre",
VALUE:"la valeur",
VALUELENGTH:"la longueur de la valeur",
ARRAYLENGTH:"la taille du tableau",
ARGVALUE:"la valeur de l'argument",
RETURNVALUE:"la valeur de retour",
THISOBJ:"l'objet courant",
OBJ:"l'objet",
CLASS:"la classe",
PROP:"la propriété",
API:"l'interface de programmation",
FUNC:"la fonction",
CALL:"l'appel de fonction",
FILE:"le fichier",
FILENAME:"le nom de fichier",
MODULE:"le module",
LOCATION:"l'emplacement",
SCRIPT:"le script",
HOST:"l'hôte jslibs",
JSLIBS:"jslibs",
INTERFACE:"l'interface",
THISOPERATION:"cette opération",
LIB:"bibliothèque",
OS:"système d'exploitation", 
COUNT:"nombre",
STATE:"état",
RANGE:"doit être comprise entre",
MIN:"doit être >=",
MAX:"doit être <=",
EQUALS:"doit être égal à",
LENGTH:"doit avoir une longueur de",
PRECISION:"a perdu en précision",
TYPE:"doit être de type",
INSTANCE:"doit être une instance de",
INHERIT:"doit hériter de",
CONVERT:"ne peux pas se convertir en",
DEFINED:"doit être défini",
NOTCOMPATIBLE:"n'est pas compatible avec",
NOTFOUND:"ne peut être trouvé",
NOTSPECIFIED:"n'est pas précisée", 
NOTSUPPORTED:"n'est pas supporté", 
CONSTRUCT:"doit être construit",
NOTCONSTRUCT:"ne peut pas être construit",
CREATE:"ne peut pas être créé", 
INIT:"ne parvient pas à s'initialiser", 
FIN:"ne parvient pas à finaliser", 
INVALID:"est invalide", 
UNEXP:"est inattendu", 
ENCODING:"encodage", 
FORMAT:"a un format non pris en charge", 
VERSION:"a une version non valide", 
ACCESS:"n'est pas accessible",
READ:"ne peut pas être lu",
WRITE:"ne peut pas être écrit",
FAILURE:"en panne", 
OPEN:"est ouvert",
CLOSED:"est fermé",
DISABLED:"est désactivé",
NOTINIT:"n'est pas initialisé",
OPERATION:"ne parvient pas à effectuer l'opération", 
COMPILE:"ne peut pas être compilé", 
INTERNAL:"rencontré une erreur interne", 
IGNORED:"sera ignoré",
REQUIRED:"est requis",
NOTIMPLEMENTED:"n'est pas en place", 
TOOBIG:"est trop grand",
TY_UNDEFINED:"indéfini",
TY_PRIMITIVE:"un non-objet",
TY_OBJECT:"un objet",
TY_STRINGDATA:"une chaîne de caractères ou une donnée",
TY_STRING:"une chaîne de caractères",
TY_DATA:"une donnée",
TY_CHAR:"une chaîne de 1 caractère",
TY_INTEGER:"un nombre entier",
TY_INTEGERDOUBLE:"un nombre entier < 2^53 et > -2^53",
TY_BOOLEAN:"un booléen",
TY_NUMBER:"un nombre",
TY_ARRAY:"un tableau",
TY_TYPEDARRAY:"un TypedArray",
TY_ARRAYBUFFER:"un ArrayBuffer",
TY_NARRAY_1:"un tableau de %d element(s)",
TY_FUNC:"une fonction",
TY_VECTOR:"un vecteur",
TY_NVECTOR_1:"un vecteur de %d element(s)",
TY_ERROR:"une erreur",
});
